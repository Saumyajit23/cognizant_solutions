1.	Understand Recursive Algorithms:
o	Explain the concept of recursion and how it can simplify certain problems.

ans -> Recursion is a programming technique where a method calls itself to solve smaller instances of the same problem. It helps simplify problems that are naturally repetitive or hierarchical, such as computing future values year by year. Instead of using loops, recursion can make code cleaner and easier to understand for tasks like mathematical calculations, tree traversals, or forecasting, where each step builds upon the result of the previous one.





4.	Analysis:
o	Discuss the time complexity of your recursive algorithm.
o	Explain how to optimize the recursive solution to avoid excessive computation.

ans -> The recursive financial forecasting algorithm has a time complexity of O(n), where n is the number of years, because it makes one recursive call per year. While this is manageable for small inputs, it can be inefficient for large values due to repeated function calls and stack usage. To optimize it, we can use an iterative approach instead, which avoids recursion and reduces memory usage, or use memoization to store previously computed results and avoid redundant calculations.